name: Deploy Hada  ERP

on:
  push:
    branches:
      - main

jobs:
  create-docker-image:
    name: Build Image - Crear imagen docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Configurar credenciales de AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Construir la imagen de Docker
      - name: Build Docker Image
        run: |
          docker build -t montillsoft001:latest .

      # Iniciar sesiÃ³n en Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 529839716957.dkr.ecr.us-east-1.amazonaws.com/montillsoft001

      # Etiquetar la imagen de Docker para ECR
      - name: Tag Docker Image for ECR
        run: |
          docker tag medasoftfacturacioneletronicadgii:latest 529839716957.dkr.ecr.us-east-1.amazonaws.com/montillsoft001:latest

      # Subir la imagen a ECR
      - name: Push Docker Image to ECR
        run: |
          docker push 529839716957.dkr.ecr.us-east-1.amazonaws.com/montillsoft001:latest

  deploy:
    name: Deploy to Lightsail
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      # Instalar AWS CLI
      - name: Install AWS CLI in virtual environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          python3 -m venv myenv
          source myenv/bin/activate
          pip install awscli

      # Configurar credenciales de AWS para despliegue
      - name: Configure AWS Credentials for Deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Desplegar en Amazon Lightsail
      - name: Start New Deployment to Lightsail
        env:
          CONTAINER_NAME: medasoftencf
          IMAGE: 529839716957.dkr.ecr.us-east-1.amazonaws.com/montillsoft001:latest
          SERVICE_NAME: ${{vars.SERVICE_NAME}} 
        run: |
          aws lightsail create-container-service-deployment --region us-east-1 \
          --service-name $SERVICE_NAME \
          --output json \
          --containers "{
            \"$SERVICE_NAME\": {
              \"image\": \"$IMAGE\",
              \"ports\": {
                \"8080\": \"HTTP\"
              }
            }
          }" \
          --public-endpoint "{
            \"containerName\": \"$SERVICE_NAME\",
            \"containerPort\": 8080,
            \"healthCheck\": {
              \"path\": \"/health\",
              \"intervalSeconds\": 30
            }
          }"

 # NotificaciÃ³n a Microsoft Teams
  notify_telegram:
    name: Send Notification to Telegram
    runs-on: ubuntu-latest
    needs: [create-docker-image, deploy]
    steps:
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "Despliegue en Lightsail de ${{ github.event_name }}  completado con Ã©xito! ðŸš€"
